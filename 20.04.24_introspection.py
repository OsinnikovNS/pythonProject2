# ----------------------------  ЗАДАНИЕ  ----------------------------
# Необходимо создать функцию, которая принимает объект (любого типа) в качестве
# аргумента и проводит интроспекцию этого объекта, чтобы определить его тип, атрибуты,
# методы, модуль, и другие свойства.
#
# 1. Создайте функцию introspection_info(obj), которая принимает объект obj.
# 2. Используйте встроенные функции и методы интроспекции Python для получения информации
# о переданном объекте.
# 3. Верните словарь или строки с данными об объекте, включающий следующую информацию:
#    - Тип объекта.
#    - Атрибуты объекта.
#    - Методы объекта.
#    - Модуль, к которому объект принадлежит.
#    - Другие интересные свойства объекта, учитывая его тип (по желанию).
import inspect
import requests  # для примера интроспекции объекта
import Object_Attributes as f  # импорт существующего модуля для примера интроспекции объекта

"""Создадим класс для примера интроспекции"""


class Sum:
    def __init__(self):
        pass


# ---------------------------------------------------------
def introspection_info(obj):
    print('Интроспекция объекта:', obj)
    print('Тип объекта:', type(obj))
    try:
        print(f'Имя объекта: {obj.__name__}')
    except:
        print('Объект не имеет атрибута: __name__')
    try:
        print('Атрибуты и методы объекта:', dir(obj))
        print('Модуль, к которому принадлежит объект:', inspect.getmodule(obj))
    except:
        print('Объект не имеет атрибутов, методов и не относится к модулю')


""" Изменяя Объект obj на различные значения (42, "строка", f, Sum, requests, True и т.д.), 
делаем интроспекцию Объекта"""
introspection_info(42)
